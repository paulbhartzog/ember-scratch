{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","ember-scratch/tests/acceptance/about-test.js","ember-scratch/tests/acceptance/about-test.jshint.js","ember-scratch/tests/acceptance/application-test.js","ember-scratch/tests/acceptance/application-test.jshint.js","ember-scratch/tests/acceptance/contact-test.js","ember-scratch/tests/acceptance/contact-test.jshint.js","ember-scratch/tests/app.jshint.js","ember-scratch/tests/components/nav-bar.jshint.js","ember-scratch/tests/ember-scratch/templates/about.template-lint-test.js","ember-scratch/tests/ember-scratch/templates/application.template-lint-test.js","ember-scratch/tests/ember-scratch/templates/components/nav-bar.template-lint-test.js","ember-scratch/tests/ember-scratch/templates/contact.template-lint-test.js","ember-scratch/tests/ember-scratch/templates/index.template-lint-test.js","ember-scratch/tests/helpers/destroy-app.js","ember-scratch/tests/helpers/destroy-app.jshint.js","ember-scratch/tests/helpers/module-for-acceptance.js","ember-scratch/tests/helpers/module-for-acceptance.jshint.js","ember-scratch/tests/helpers/resolver.js","ember-scratch/tests/helpers/resolver.jshint.js","ember-scratch/tests/helpers/start-app.js","ember-scratch/tests/helpers/start-app.jshint.js","ember-scratch/tests/integration/components/nav-bar-test.js","ember-scratch/tests/integration/components/nav-bar-test.jshint.js","ember-scratch/tests/resolver.jshint.js","ember-scratch/tests/router.jshint.js","ember-scratch/tests/routes/about.jshint.js","ember-scratch/tests/routes/contact.jshint.js","ember-scratch/tests/test-helper.js","ember-scratch/tests/test-helper.jshint.js","ember-scratch/tests/unit/routes/about-test.js","ember-scratch/tests/unit/routes/about-test.jshint.js","ember-scratch/tests/unit/routes/contact-test.js","ember-scratch/tests/unit/routes/contact-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('ember-scratch/tests/acceptance/about-test', ['exports', 'qunit', 'ember-scratch/tests/helpers/module-for-acceptance'], function (exports, _qunit, _emberScratchTestsHelpersModuleForAcceptance) {\n\n  (0, _emberScratchTestsHelpersModuleForAcceptance['default'])('Acceptance | about');\n\n  (0, _qunit.test)('visiting /about', function (assert) {\n    visit('/about');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/about');\n    });\n  });\n});","define('ember-scratch/tests/acceptance/about-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/about-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/about-test.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/acceptance/application-test', ['exports', 'qunit', 'ember-scratch/tests/helpers/module-for-acceptance'], function (exports, _qunit, _emberScratchTestsHelpersModuleForAcceptance) {\n\n  (0, _emberScratchTestsHelpersModuleForAcceptance['default'])('Acceptance | index');\n\n  (0, _qunit.test)('visiting /', function (assert) {\n    visit('/');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/');\n    });\n  });\n\n  (0, _qunit.test)('should link to information about the company.', function (assert) {\n    visit('/');\n    click('a:contains(\"About\")');\n    andThen(function () {\n      assert.equal(currentURL(), '/about', 'should navigate to about');\n    });\n  });\n\n  (0, _qunit.test)('should link to contact information', function (assert) {\n    visit('/');\n    click('a:contains(\"Contact\")');\n    andThen(function () {\n      assert.equal(currentURL(), '/contact', 'should navigate to contact');\n    });\n  });\n});","define('ember-scratch/tests/acceptance/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/application-test.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/acceptance/contact-test', ['exports', 'qunit', 'ember-scratch/tests/helpers/module-for-acceptance'], function (exports, _qunit, _emberScratchTestsHelpersModuleForAcceptance) {\n\n  (0, _emberScratchTestsHelpersModuleForAcceptance['default'])('Acceptance | contact');\n\n  (0, _qunit.test)('visiting /contact', function (assert) {\n    visit('/contact');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/contact');\n    });\n  });\n});","define('ember-scratch/tests/acceptance/contact-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/contact-test.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/components/nav-bar.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/nav-bar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/nav-bar.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/ember-scratch/templates/about.template-lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('TemplateLint - ember-scratch/templates/about.hbs');\n  QUnit.test('should pass TemplateLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-scratch/templates/about.hbs should pass TemplateLint.\\n');\n  });\n});","define('ember-scratch/tests/ember-scratch/templates/application.template-lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('TemplateLint - ember-scratch/templates/application.hbs');\n  QUnit.test('should pass TemplateLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-scratch/templates/application.hbs should pass TemplateLint.\\n');\n  });\n});","define('ember-scratch/tests/ember-scratch/templates/components/nav-bar.template-lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('TemplateLint - ember-scratch/templates/components/nav-bar.hbs');\n  QUnit.test('should pass TemplateLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-scratch/templates/components/nav-bar.hbs should pass TemplateLint.\\n');\n  });\n});","define('ember-scratch/tests/ember-scratch/templates/contact.template-lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('TemplateLint - ember-scratch/templates/contact.hbs');\n  QUnit.test('should pass TemplateLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-scratch/templates/contact.hbs should pass TemplateLint.\\n');\n  });\n});","define('ember-scratch/tests/ember-scratch/templates/index.template-lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('TemplateLint - ember-scratch/templates/index.hbs');\n  QUnit.test('should pass TemplateLint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-scratch/templates/index.hbs should pass TemplateLint.\\n');\n  });\n});","define('ember-scratch/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('ember-scratch/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'ember-scratch/tests/helpers/start-app', 'ember-scratch/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _emberScratchTestsHelpersStartApp, _emberScratchTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _emberScratchTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _emberScratchTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('ember-scratch/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/helpers/resolver', ['exports', 'ember-scratch/resolver', 'ember-scratch/config/environment'], function (exports, _emberScratchResolver, _emberScratchConfigEnvironment) {\n\n  var resolver = _emberScratchResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _emberScratchConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _emberScratchConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('ember-scratch/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/helpers/start-app', ['exports', 'ember', 'ember-scratch/app', 'ember-scratch/config/environment'], function (exports, _ember, _emberScratchApp, _emberScratchConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _emberScratchConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _emberScratchApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('ember-scratch/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/integration/components/nav-bar-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('nav-bar', 'Integration | Component | nav bar', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    assert.expect(0);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@2.8.1',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 11\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'nav-bar', ['loc', [null, [1, 0], [1, 11]]], 0, 0, 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })()));\n    //assert.equal(this.$().text().trim(), '');\n  });\n});","define('ember-scratch/tests/integration/components/nav-bar-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/nav-bar-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/nav-bar-test.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/routes/about.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/about.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/about.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/routes/contact.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/contact.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/contact.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/test-helper', ['exports', 'ember-scratch/tests/helpers/resolver', 'ember-qunit'], function (exports, _emberScratchTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_emberScratchTestsHelpersResolver['default']);\n});","define('ember-scratch/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/unit/routes/about-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:about', 'Unit | Route | about', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-scratch/tests/unit/routes/about-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/about-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/about-test.js should pass jshint.');\n  });\n});","define('ember-scratch/tests/unit/routes/contact-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:contact', 'Unit | Route | contact', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('ember-scratch/tests/unit/routes/contact-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/contact-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/contact-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('ember-scratch/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}